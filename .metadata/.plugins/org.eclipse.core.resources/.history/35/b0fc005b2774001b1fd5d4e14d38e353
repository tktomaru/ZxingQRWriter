package com.tukutano;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

public class ZxingQRWriter {

  public static final void main(String[] args) {
    Charset charset = Charset.forName("UTF-8");
    String content = "https://develman.net";
    String output = "qrcode.png";
    List<FileFormatCSV> inputData = new ArrayList<>();

    if (args.length == 0) {
      System.out.println("コマンドライン引数がありません。");
      System.exit(1);
    }

    System.out.println("File name:" + args[0]);

    String inputFileName = args[0];

    System.out.println("input file = " + inputFileName);

    // ファイルからlistLineに文字列を読み込み
    try {
      File f = new File(inputFileName);
      BufferedReader br = new BufferedReader(new FileReader(f));

      String[] csvData; // 分割後のデータを保持する配列
      while (line != null) {
        System.out.println(line);
        line = br.readLine();
        // lineをカンマで分割し、配列dataに設定
        csvData = line.split(",");
        if (csvData == null) {
          System.out.println("期待：filename,010203040506etc");
          System.out.println("CSVが不正です：" + line);
          System.exit(1);
        }
        if (2 > csvData.length) {
          System.out.println("期待：filename,010203040506etc");
          System.out.println("CSVが不正です（2つ未満の行を発見）:" + line);
          System.exit(1);
        }
        FileFormatCSV one = new FileFormatCSV();
        one.setFileName(csvData[0]);
        one.setHexString(csvData[1]);
        inputData.add(one);
      }
      br.close();
    } catch (IOException e) {
      System.out.println(e);
      System.exit(1);
    }

    for (FileFormatCSV one : inputData) {
      GenerateQR qrGenerater = new GenerateQR();
      byte[] bytes = one.getHexString();
      try {
        qrGenerater.generateQR(new String(bytes, "UTF-8"), one.getFileName());
      } catch (UnsupportedEncodingException e) {
        System.out.println(e);
        e.printStackTrace();
        System.exit(1);
      }
    }
  }

}

